CMAKE_MINIMUM_REQUIRED( VERSION 2.8 ) 
PROJECT( hnode_sensor_endpoint ) 

SET( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/" )

SET( HNODE_SENSOR_ENDPOINT_SRC
     ${CMAKE_SOURCE_DIR}/src/HNode.cpp
     ${CMAKE_SOURCE_DIR}/src/HNodeSensorMeasurement.cpp
     ${CMAKE_SOURCE_DIR}/src/HNodeSEPPacket.cpp
     ${CMAKE_SOURCE_DIR}/src/HNodeSEPManager.cpp
     ${CMAKE_SOURCE_DIR}/src/HNodeSEPResource.cpp
)

#SET(CMAKE_BUILD_TYPE Debug)

FIND_PACKAGE(GLIB REQUIRED)
FIND_PACKAGE(HNREST REQUIRED)
FIND_PACKAGE(HNODE REQUIRED)
FIND_PACKAGE(LibXml2 REQUIRED)
FIND_PACKAGE(Boost 1.49.0 COMPONENTS regex date_time program_options system thread REQUIRED) 

MESSAGE( STATUS "Boost Inc: " ${Boost_INCLUDE_DIRS} )
MESSAGE( STATUS "Boost Lib: " ${Boost_LIBRARIES} )

INCLUDE_DIRECTORIES( ${GLIB_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${HNREST_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${HNODE_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${LIBXML2_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${Boost_INCLUDE_DIRS} )

INCLUDE_DIRECTORIES( ${CMAKE_SOURCE_DIR}/src )

ADD_EXECUTABLE( hnode_sepd ${HNODE_SENSOR_ENDPOINT_SRC} ) 
TARGET_LINK_LIBRARIES( hnode_sepd ${GLIB_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_sepd ${HNREST_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_sepd ${HNODE_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_sepd ${LIBXML2_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_sepd ${Boost_LIBRARIES} )



